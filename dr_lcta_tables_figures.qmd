---
title: "A latent trajectory analysis in glycemic control and diabetic retinopathy screening coverage 2011-2023: A municipality-level study"
author:
  - name: Rolando Silva-Jorquera
    orcid: 0000-0002-1244-8350
    email: rolando.silva@pucv.cl
    affiliations:
      - name: University College London, Institute for Global Health, London, United Kingdom
  - name: Kasim Allel
    orcid: 0000-0002-2144-7181
    email: kasim.allel1@lshtm.ac.uk
    affiliations:
      - name: University of Oxford, Nuffield Department of Population Health, Oxford, United Kingdom
  - name: Hassan Haghparast-Bidgoli
    orcid: 0000-0001-6365-2944
    email: h.haghparast-bidgoli@ucl.ac.uk
    affiliations:
      - name: University College London, Institute for Global Health, London, United Kingdom
  - name: Paul Nderitu
    orcid: 0000-0002-8571-0751
    email: paul.nderitu@kcl.ac.uk
    affiliations:
      - name: King’s College London, Section of Ophthalmology, Faculty of Life Sciences and Medicine, London, United Kingdom
      
      - name: King’s College London, Department of Ophthalmology, King’s Ophthalmology Research Unit (KORU), London, United Kingdom
  - name: Alasdair Warwick
    orcid: 0000-0002-0800-2890 
    email: alasdair.warwick.19@ucl.ac.uk
    affiliations:
      - name: NIHR Biomedical Research Centre, Moorfields Eye Hospital NHS Foundation Trust and UCL Institute of Ophthalmology, London, United Kingdom
      
      - name: UCL Institute of Cardiovascular Science, University College London, London, United Kingdom
  - name: Claudio Zett
    orcid: 0000-0003-1839-0927
    email: claudio.zett@pucv.cl
    affiliations:
      - name: Pontificia Universidad Católica de Valparaíso, Valparaíso, Chile
format:
  html:
    toc: true
    toc_float: true
    toc_depth: 2
    number_sections: true
    code_folding: hide
    theme: readable
  pdf:
    number-sections: true
    colorlinks: true
    keeptex: true
    include-in-header: 
      text: |
        \usepackage{booktabs}
        \usepackage{siunitx}
        \newcolumntype{d}{S[
            input-open-uncertainty=,
            input-close-uncertainty=,
            parse-numbers = false,
            table-align-text-pre=false,
            table-align-text-post=false
         ]}
  docx: default
prefer-html: true
date: 'last-modified'
#date-format: '[This version:] MMMM D, YYYY [<br>(First version: February  16, 2023)]'
#abstract: "**Background:** Diabetes management in Chile varies from that in other countries. The Cardiovascular Program (PSCV) aims to control diabetes and retinopathy screening; however, this indicator has not been consistently monitored. Latent class mixture modeling was used to investigate the factors influencing membership in different subpopulations. **Aim**: This study analyzed PSCV data from 2011 to 2023 to identify unique trajectories in diabetes and diabetic retinopathy screening coverage (DMC and DRSC) among municipalities. The characteristics of deprivation were also examined. The analyses were conducted at the ecological level to identify municipalities with coverage differing from the national average or target. **Methods:** This study obtained data from the Statistical and Health Information Department on individuals with T2DM covered by the public health scheme, aged 15 years or above, and eligible for an annual eye examination in all 346 municipalities in Chile between 2011 and 2023. To have stronger analysis we remove the clasified municiplities by size of DM population, and the the lower quintil was removed.A linear Latent Class Mixed Model was used to derive trajectory classes for DRSC and DGCC, with six clusters identified based on clinical plausibility, model fit, and entropy criteria. Logistic regression was used to determine the impact of municipality characteristics on trajectory-class membership. This study focuses on interpreting the shape of clusters from a theoretical perspective. **Results:**  For each of the six models, the fit criteria were evaluated and the proportions in each trajectory class were calculated, along with the estimated intercepts and slopes for each class, with random effects across municipalities. The one-class model tested was a simple linear model with years predicting coverage and cluster membership, with intercepts representing baseline coverage and slopes indicating average annual change. The one-class model for DGC showed an average coverage of 45.10% at baseline with a small but significant negative slope, whereas the one-class model for DRS showed an average coverage of 28.45% with an annual increase of 1.59. Further analysis will focus on the DRSC's class membership, and the two-class model was preferred for DRSC over the one- and three-class models. In 2011, Class 1 (74.32% of municipalities) had an average coverage of 22.88% and experienced a gradual annual increase of 1.41% until 2023, whereas Class 2 (25.68%) had an average of 44.03% in 2011 and experienced a rapid annual increase of 2.07% until 2023. The unadjusted associations of socioeconomic index predictor factors with municipality DRSC trajectory provided an OR estimate of 0.531 (95% CI, 0.387–0.716), suggesting that as deprivation levels rise, the probability of achieving higher coverage (Class 2) increases. **Conclusion:** The DGCC in LAs in Chile appears to follow only a single trajectory, whereas the DRSC follows two slowly growing differing trajectories. Counterintuitively, the trajectories that followed did not appear to be influenced by deprivation. The group of municipalities following a higher DRSC trajectory is potentially worthy of further study to identify whether there are common local policies or practices that may have contributed to their positive deviance from national trends towards an increase in DRSC."
bibliography: references.bib
csl: vancouver-superscript.csl
tbl-cap-location: top
number-sections: true
editor:
  mode: source
execute:
  echo: false
  warning: true
  error: true
  cache: false
---

```{r}
#| message: false
#| echo: false
#| warning: false
#| paged-print: false
#| results: hide


# Load required libraries
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(purrr)
library(patchwork)
library(tidyverse) #dplyr, tibble, ggplot2, readr, tidyr, stringr, forcats, lubridate, purr
library(knitr)
library(kableExtra)
library(ggtext)
library(Cairo)
library(extrafont)
library(hrbrthemes)
library(directlabels)
library(ggrepel)
library(readxl)
library(extrafont)
library(scales)
library(ggsci)
library(lcmm)
library(MixAll)
require(kml)
require(traj)
require(lmerTest)
require(plyr)
require(psych)
require(fpc)
require(mclust)
require(rcompanion)
library(gridExtra)
library(tidyLPA)
library(MASS)
library(broom)
library(skimr)
library(gtExtras)
library(pander)
library(BayesFactor)
library(modelsummary)
library(gt)
library(gtsummary)
library(survival)
library(xtable)
library(skimr)
library(htmltools)
library(tibble)
library(LCTMtools)
library(grid)
library(rlang)
library(lmtest)
library(quarto)



```

# Methods

## Study design and data sources

We conducted a retrospective observational study using annually reported municipality-level health data from 2011 to 2023. Although the data consist of repeated cross-sectional observations collected independently each year, they were analyzed longitudinally to capture temporal patterns and trajectories of care coverage across municipalities. To achieve this, we applied latent class mixed models (LCMM), a probabilistic approach that identifies distinct latent trajectories within heterogeneous populations and is well suited for repeated observations at the aggregate level.[@berlin_introduction_2014] This approach provided a solid foundation for assessing coverage patterns over time.

Our analysis focused on adults aged ≥15 years diagnosed with type 2 diabetes mellitus (T2DM) under the Chilean public health system, consistent with the age threshold established by national cardiovascular program guidelines. Data on T2DM care indicators were sourced from the Statistical and Health Information Department via the Chilean Public Health Platform.[@deis] The data were provided in a curated format as summary indicators at the health centre level and subsequently aggregated at the municipality level for analysis. These data sources laid out the basis for constructing outcomes indicators.

We examined two primary outcomes: diabetic glycemic control coverage (DGCC) and diabetic retinopathy screening coverage (DRSC). DGCC was defined as the proportion of T2DM patients achieving HbA1c \<7% among those monitored annually, while DRSC was defined as the proportion of T2DM patients receiving an annual retinopathy screening. These indicators reflect key aspects of quality in diabetes care provision, offering insight into both metabolic control and preventive screening efforts. It is also important to consider the scope and limitations of these indicators as represented in the dataset, since their interpretation depends on how each was operationalized in the data.

For DGCC, patients without HbA1c testing were excluded from the cardiovascular program after three unsuccessful contact attempts and were therefore not included in the dataset. As a result, the dataset includes only individuals with at least one recorded HbA1c measurement within the calendar year, and those without testing were not assumed to have HbA1c \>7%. This ensures that DGCC reflects actual glycemic control rather than assumptions about missing data. The inclusion process for DRSC was structured differently.

For DRSC, all diagnosed patients remained in the cardiovascular program regardless of whether they attended their annual diabetic retinopathy screening. Hence, all patients were retained in the denominator for this indicator. These inclusion criteria were established by the health system prior to data aggregation.

To improve representativeness, we excluded municipalities in the lowest population-size quintile. These smaller municipalities often exhibited extreme coverage percentages (e.g., 0% or 100%) due to the limited size of their T2DM populations, which could have disproportionately influenced overall estimates and introduced bias into the trajectory modeling. Excluding these municipalities minimized the risk of bias in trajectory estimation and provided a clearer understanding of the relationship between coverage trajectories and key municipal-level characteristics.

We also examined associations between trajectory membership and selected municipal-level characteristics in a second stage of the analysis. These characteristics included socioeconomic deprivation, urbanicity, and geographical location. Socioeconomic deprivation was measured using the Index of Socioeconomic Development (ISED), which incorporates indicators such as income, education, housing, and sanitation. [@gattini_comunas_2013] After excluding municipalities in the lowest quintile of diabetes population at municipal level, the ISED was standardized (mean = 0, SD = 1) across the remaining sample to facilitate comparability across municipalities. Urbanicity classification followed national guidelines and categorized municipalities as predominantly rural, mixed, or predominantly urban.[@bergamini2020] Geographical zones were defined using the classification of the Environmental Tribunals, which divide the country into northern, central, and southern zones.

## Missing data handling

The dataset was curated to minimize missing data through predefined inclusion rules established by the health system. For DGCC, only individuals with at least one recorded HbA1c measurement within the calendar year were retained in the dataset; patients without testing after three failed contact attempts were excluded administratively, and not considered missing. For DRSC, all diagnosed patients remained in the cardiovascular program regardless of screening attendance, ensuring complete denominators. At the municipality level, we excluded units in the lowest quintile of diabetes population size to mitigate the impact of extreme values arising from unstable denominators. In the second-stage association models, no missing data were present in the municipal-level covariates (deprivation, urbanicity, and geographical zone), all of which were complete for the retained sample. As a result, all analyses were conducted on full-case data, and no imputation was required.

## Statistical analysis

We conducted a two-stage analysis to identify coverage trajectory patterns and examine their sociodemographic determinants.

In the first stage, we applied latent class mixed models (LCMM) to classify trajectories of DRSC and DGCC between 2011 and 2023. LCMM assigns individuals probabilistically to latent classes, each representing a distinct trajectory pattern within the population [@berlin_introduction_2014]. Ten model structures (A to J) from one to seven class-models were tested. In brief, these included homoscedastic and heteroscedastic models, as well as models with random intercepts or higher-order random effects. A grid search procedure was used to optimize model parameters, with initial values derived from the one-class model estimates. This method involved 200 random sets and a maximum of 1500 iterations to explore the parameter space efficiently.

In the second stage, we assessed whether key municipal-level characteristics were associated with class membership, using a modelling framework grounded in established approaches [@lennon2018]. This design enabled both the classification of coverage patterns and the exploration of contextual factors that may influence them.

The modelling process began with the specification of a linear fixed-effects model (Model A; see Supplementary Table S1**)**, which served as a scoping model to explore trajectory structures. We then evaluated patterns in the standardized residuals from these preliminary models to inform the selection of candidate model structures. Specifically, flat residuals suggested the need for a random intercept; linear trends pointed to a random slope; parabolic curves indicated a quadratic term; and more complex patterns suggested the inclusion of a cubic term.

Without prior studies suggesting a specific number of latent classes for these outcomes indicating which class models to use for evaluating residuals and identifying potential structures, we improved our selection method by examining BIC value plots alongside class proportions. We used inflection points, or "elbow bends," in these BIC curves to find a compromise between model complexity and goodness-of-fit, as recommended by Molenberghs and Verbeke.[@molenberghs_model_2009]Our hypothesis regarding the number of latent classes was based on these elbow plots, and we used residual patterns to guide the potential model structure. This approach laid the groundwork for choosing and refining the best model based on statistical fit and interpretability.

We refined our previously selected potential class-model and model structure by evaluating the our selected class models across the ten structures presented in Supplementary Table S1. Then, a model adequacy was assessed using standard criteria: average posterior probability of assignment (APPA \>0.70), odds of correct classification (OCC \>5), relative entropy (\>0.6), mismatch values close to 0, and a minimum class size of 2% of the sample. The 2% threshold was set to ensure meaningful class interpretation in a moderately sized population. If the criteria were not met, the number of classes and model structure were adjusted to enhance classification quality and model fit, and we considered an alternative model with a higher BIC value. We also integrated clinical interpretability and plausibility considerations by reviewing the clinical relevance of latent class coverage patterns, ensuring that each class represented realistic and distinguishable variations in diabetes care provision.

As part of the model adequacy assessment, we also constructed elbow graphs for across the strucrure displaying the BIC values for each candidate model to visually examine the point at which model fit no longer substantially improved with the addition of more classes as we previously did for our scoping model (Model A). Although final model selection was guided primarily by the formal adequacy criteria described above, the elbow graphs served as a complementary heuristic to prioritize statistically robust and parsimonious solutions. Elbow plots were reviewed across all candidate structures before final selection. Once the number of classes and model structure were finalized and deemed adequate, we proceeded to visualize the model outcomes trajectories.

We used three graphical presentation approaches to visualize model outcomes. The conventional approach involved plotting mean trajectories with time for each class. Additionally, we used mean trajectory plots with 95% predictive intervals for each class, which display the predicted random variation within each class. Another approach was to plot individual-level "spaghetti plots" with time (e.g., using a random sample of participants), allowing the reader to observe changes within classes over time. These three graphical techniques helped provide a comprehensive understanding of the class-specific trajectories. We have also used additional tools for model discrimination.

We use degrees of separation to discriminate the separation of the mean trajectories across latent classes. We applied multivariate Mahalanobis distance to help identifying heterogeneous latent trajectories. Thus, higher DoSK values indicate well-separated mean trajectories, while a DoSK of zero indicates identical trajectories suggesting selection for alternative models with fewer classes.

We use an additional tool to asses the structure of our model trough Elsensohn’s envelope of residuals. To assess the adequacy of model structure assumptions, we implemented a residual-based diagnostic approach originally proposed by Elsenhohn et al. for fixed-effects latent class models and subsequently extended by Lennon et al. to accommodate random effects specifications. For each time point and class, we computed the weighted mean of the predicted coverage values using individuals’ posterior probabilities of class membership as weights. In parallel, we estimated the class-specific and time-specific weighted standard deviation of subject-specific residuals, centered around the weighted mean of residuals. These standard deviations were used to construct upper and lower envelopes (+- 1 SD) around the mean trajectories as a basis for graphical representation of model fit and class-specific uncertainty.

This graphical tool provides a visual assessment of the model’s structure adequacy. Non-parallel boundaries may indicate heteroscedasticity of residuals, while markedly varying interval widths may suggest that within-class heterogeneity is not fully captured. This method is suitable for both fixed- and random-effects latent class trajectory models and contributes to identifying -or confirming - the optimal model structure.

After identifying the optimal model structure, we proceeded with assigning descriptive labels to the latent trajectory classes. Each class was categorized based on observed coverage patterns. This process involved reviewing class-specific characteristics to ensure that each label was meaningful and aligned with plausible real-world patterns. These labels provided a framework for understanding the different patterns of diabetes coverage provision, guiding further interpretation and analysis. Following this, we assessed the robustness of the model by conducting sensitivity analyses.

To assess the robustness of the latent class trajectory classifications, we conducted sensitivity analyses by replicating the modeling on a restricted sample of individuals with at least three observed time points. This threshold ensured sufficient longitudinal information per participant to support reliable class assignment. Agreement between classifications in the full sample and the restricted sample will be quantified using Cohen’s kappa coefficient, providing an objective measure of stability. This diagnostic step allows us to evaluate whether the favored model remains consistent across subsamples, thereby strengthening confidence in its validity and generalizability. After this step, we will assess the interpretability of the favored model by examining potential influential factors.

In the second stage, we examined whether municipality-level characteristics (deprivation, urbanicity, and geographical location) predicted class membership using lineal regression model. The ISED score was standardized to meet distributional assumptions, and both unadjusted and adjusted models were fitted to evaluate the strength and consistency of these associations.

All analyses were conducted in R version 4.4.2, with latent class trajectory modelling performed using the `lcmm` package (version 2.1.0). Additional data processing and visualization tasks were supported by other R packages as appropriate.

All syntax files and documentation used in the analysis are available via a public GitHub repository **\[GitHub link\].**

This study adhered to the Guidelines for Reporting on Latent Trajectory Studies (GRoLTS) to ensure transparency and replicability in reporting [@vandeschoot2016].

## Ethics, Funding and Public Involvement

This study was based on publicly available, aggregate municipality-level data without individual identifiers; therefore, ethical approval was not required. Patients or members of the public were not involved in the design, conduct, or analysis of this study. We plan to disseminate the findings through academic conferences and by engaging with public policy stakeholders and health authorities to support evidence-informed decision-making.

# Results

## Overview of DGCC and DRSC Latent Class Trajectory Estimation

Of the 346 municipalities with available data, we excluded those in the lowest quintile of diabetes population size (n = 46) to improve representativeness and reduce the influence of unstable denominators. As a result, 300 municipalities were retained for the 2011–2023 analyses and 289 for the 2011–2019 analyses, depending on the availability of complete time-series data for each outcome and period.

### Scoping models and initial trajectory structures

Scoping models using linear fixed-effects structures (Model A) suggested that a four-class structure offered the best balance between parsimony and fit across all combinations of outcome (DGCC or DRSC) and period (2011–2023 or 2011–2019). BIC plots consistently displayed an inflection point - where the elbow bends - at four classes for Model A , beyond which improvements in model fit were marginal (Supplementary Figures S2–S5). Standardized residuals from one-class linear models showed quadratic and cubic patterns supporting the need to explore higher-order strucrures in subsequent steps. These findings jointly supported the four-class trajectory models as a theoretically plausible and statistically grounded starting point for refinement.

### Number of latent classes

Building on the exploratory results, we formally compared latent class solutions ranging from one to seven classes across ten candidate model structures: quadratic, cubic, and proportional random effects. The comparison relied exclusively on BIC values, which consistently supported a four-class solution across all outcome-period combinations (Supplementary Table S3). In each case, BIC curves exhibited a marked elbow at four classes, indicating diminishing returns in model fit beyond that point. This convergence reinforced the choice of four classes as the optimal structure for further model testing.

### Model structure refinement

Using the four-class structure as a basis, we tested ten predefined model variants (Structures A–J), each differing in functional form (linear, quadratic, cubic), random effects specification, and error variance assumptions. For DGCC, the best-performing models were Structure D (cubic, fixed effects) for 2011–2023 and Structure C (quadratic, fixed effects) for 2011–2019. For DRSC, Structure D (cubic, fixed effects) was retained for 2011–2023, while Structure G (quadratic, proportional random effects) was the best-performing model to meet adequacy thresholds for 2011–2019 (see Supplementary Table S4).

### Model adequacy assesment and plausibility

All four final models (DGCC and DRSC × two periods) met the predefined adequacy thresholds, including relative entropy ≥ 0.67, average posterior probability of assignment (APPA) \> 0.70, odds of correct classification (OCC) \> 5, and mismatch values near zero, with no class representing less than 2% of the sample. Models resulting in highly imbalanced class distributions (e.g., 93% in one class and 7% in another) were rejected because they failed to represent plausible variations in care coverage. Both outcomes demonstrated adequate classification quality: DGCC models achieved high OCC scores (8.1–11.7) and entropy values (0.83–0.85), while DRSC models reached acceptable OCC levels (5.5–9.5) and entropy between 0.67 and 0.79. Supplementary Figures S3–S6 show that all retained models displayed a clear elbow point at four classes, reinforcing this structure as statistically parsimonious and theoretically meaningful.

### Graphical presentations

For the four final models—one per outcome and study period—we produced graphical representations of latent class trajectories to aid interpretation. Figure 1 shows the estimated mean coverage across time for each outcome, while Figure 2 displays class-specific trajectories from the selected latent class models. These included: Model D (cubic without random effects) for DGCC 2011–2023, Model C (quadratic without random effects) for DGCC 2011–2019, Model D(cubic without random effects) for DRSC 2011–2023, and Model G (quadratic with random intercept and slope) for DRSC 2011–2019. Each trajectory plot illustrates distinct temporal patterns of coverage across latent subgroups, highlighting heterogeneity in trends and class differentiation.

To complement these summary plots, we generated spaghetti graphs using individual-level data for each retained model (Supplementary Figure S7), showing the distribution and dispersion of observed coverage trajectories within each latent class. These visualisations enhance interpretability by illustrating the internal variability of trajectories and the degree of within-class cohesion over time.

### Additionals discrimination tools

To evaluate the adequacy of the model structure, we applied Elsensohn’s envelope of residuals diagnostic tool. The envelope plots, displayed in **Supplementary Figure S7**, represent the mean trajectory of each latent class with upper and lower boundaries indicating the range of residuals (±1 SD). These plots visually assessed the fit of the model at each time point and latent class.

For the majority of classes, the envelope boundaries were relatively parallel, indicating that the model effectively captured the variation in coverage. However, some classes exhibited non-parallel boundaries, suggesting slight heteroscedasticity, where the variability of residuals increased or decreased over time. Additionally, some classes showed varying widths in the envelopes, which may indicate unaccounted-for within-class heterogeneity.

These envelope plots confirmed that the model structure was largely adequate, although minor adjustments may be considered for classes with notable residual heterogeneity.

For both DRSC and DGCC, the calculated DoSK values were consistently high, indicating well-separated classes. This suggests that the latent classes represent distinct and meaningful variations in diabetes care coverage across municipalities. Lower DoSK values observed in a few classes signified possible overlap in trajectory patterns, which was further assessed through model refinement.

Epidemiolo

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-height: 4.5
#| fig-width: 10
#| paged-print: false
#| fig-cap: "**Figure 1. Overall mean coverage of glycaemic control and diabetic retinopathy screening across Chilean municipalities (2011–2023).** The plots display average annual coverage trends, calculated at the municipal level, for HbA1c control (left) and DR screening (right), excluding municipalities in the lowest quintile of diabetes population. The dashed red line indicates the 80% coverage benchmark used as a policy-relevant threshold."

library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(purrr)
library(patchwork)
library(tidyverse) #dplyr, tibble, ggplot2, readr, tidyr, stringr, forcats, lubridate, purr
library(knitr)
library(kableExtra)
library(ggtext)
library(Cairo)
library(extrafont)
library(hrbrthemes)
library(directlabels)
library(ggrepel)
library(readxl)
library(extrafont)
library(scales)
library(ggsci)
library(lcmm)
library(MixAll)
require(kml)
require(traj)
require(lmerTest)
require(plyr)
require(psych)
require(fpc)
require(mclust)
require(rcompanion)
library(gridExtra)
library(tidyLPA)
library(MASS)
library(broom)
library(skimr)
library(gtExtras)
library(pander)
library(BayesFactor)
library(modelsummary)
library(gt)
library(gtsummary)
library(survival)
library(xtable)
library(skimr)
library(htmltools)
library(tibble)
library(LCTMtools)
library(grid)
library(rlang)
library(lmtest)


# ─────────────────────────────────────────────────────────────────────────────
# 📂 Cargar archivos necesarios
coverage_2011_2023_noq1 <- read.csv("coverage_2011_2023_noq1.csv") 

all_models_by_period <- readRDS("all_models_by_period.rds")



# ─────────────────────────────────────────────────────────────────────────────
# 🗓️ Definir periodos utilizados
periods <- list(
  "2011_2023" = 1:13,
  "2011_2019" = 1:9
)

# ─────────────────────────────────────────────────────────────────────────────
# 🧼 Preprocesamiento del dataset
coverage_data <- coverage_2011_2023_noq1 %>%
  arrange(comuna2, ano) %>%
  mutate(
    year = ano - min(ano) + 1,
    id = comuna2,
    drsc = drs_coverage,
    dgcc = dm_coverage
  )


# ─────────────────────────────────────────────────────────────────────────────
# 📊 1. General trends (no latent classes)

general_dm_trend <- coverage_data %>%
  group_by(year) %>%
  dplyr::summarise(
    mean_coverage = mean(dgcc, na.rm = TRUE),
    sd_coverage = sd(dgcc, na.rm = TRUE),
    n_coverage = n(),
    se_mean = sd_coverage / sqrt(n_coverage),
    margin_error = 1.96 * se_mean,
    lower_ci = mean_coverage - margin_error,
    upper_ci = mean_coverage + margin_error,
    .groups = "drop"
  )

general_drs_trend <- coverage_data %>%
  group_by(year) %>%
  dplyr::summarise(
    mean_coverage = mean(drsc, na.rm = TRUE),
    sd_coverage = sd(drsc, na.rm = TRUE),
    n_coverage = n(),
    se_mean = sd_coverage / sqrt(n_coverage),
    margin_error = 1.96 * se_mean,
    lower_ci = mean_coverage - margin_error,
    upper_ci = mean_coverage + margin_error,
    .groups = "drop"
  )

plot_dm <- ggplot(general_dm_trend, aes(x = year, y = mean_coverage)) +
  geom_line(color = "red", linewidth = 0.3) +
  geom_point(size =1.5, color = "red") +
  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.25, color = "red") +
  geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
  scale_x_continuous(breaks = seq(1, 13, by = 2), labels = seq(2011, 2023, by =2)) +
  scale_y_continuous(limits = c(0, 1), labels = percent) +
  labs(x="Year", y = "Average glycaemic coverage") +
  theme_bw() +
  theme(
    legend.position = "none",
    axis.text = element_text(size = 9),
    axis.title = element_text(size = 9),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )

plot_drs <- ggplot(general_drs_trend, aes(x = year, y = mean_coverage)) +
  geom_line(color = "red", linewidth = 0.3) +
  geom_point(size = 1.5, color = "red") +
  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.25, color = "red") +
  geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
  scale_x_continuous(breaks = seq(1, 13, by = 2), labels = seq(2011, 2023, by =2)) +
  scale_y_continuous(limits = c(0, 1), labels = percent) +
  labs(x="Year", y = "Average DR screening coverage") +
  theme_bw() +
  theme(
    legend.position = "none",
    axis.text = element_text(size =9),
    axis.title = element_text(size = 9),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()
  )



# ─────────────────────────────────────────────────────────────────────────────
# 🧠 Asignar el coverage_data adecuado a cada modelo por periodo
for (period_name in names(all_models_by_period)) {
  period_data <- coverage_data %>% filter(year %in% periods[[period_name]])
  
  for (model_name in names(all_models_by_period[[period_name]])) {
    model <- all_models_by_period[[period_name]][[model_name]]
    
    if (!is.null(model)) {
      model$call$data <- period_data
      all_models_by_period[[period_name]][[model_name]] <- model
    }
  }
}

# ─────────────────────────────────────────────────────────────────────────────
# 🔁 Renombrar todos los modelos agregando sufijo de periodo
create_named_models_by_period <- function(all_models_by_period, period_suffixes = names(all_models_by_period)) {
  names(all_models_by_period) <- period_suffixes
  named_models <- list()
  
  for (i in seq_along(all_models_by_period)) {
    models <- all_models_by_period[[i]]
    suffix <- period_suffixes[i]
    renamed_models <- setNames(models, paste0(names(models), "_", suffix))
    named_models[[i]] <- renamed_models
  }
  
  all_named_models <- do.call(c, named_models)
  return(all_named_models)
}

all_named_models <- create_named_models_by_period(all_models_by_period)

# ─────────────────────────────────────────────────────────────────────────────
# 💾 Guardar las versiones parchadas
#saveRDS(all_models_by_period, "all_models_by_period_with_data.rds")
saveRDS(all_named_models, "all_named_models.rds")
all_named_models <- readRDS("all_named_models.rds")

# Define custom trajectory labels for each model
trajectory_labels <- list(
  `5class_cubic_nre_dgcc_model_2011_2023` = c(
    "Consistently lower",
    "Stable medium",
    "Stable upper medium",
    "Deteriorating",
    "Highest"
  ),
  `4class_quadratic_nre_dgcc_model_2011_2019` = c(
    "Consistently lower",
    "Stable medium",
    "Stable upper medium",
    "Highest"
  ),
  `4class_cubic_nre_drsc_model_2011_2023` = c(
    "Consistently low",
    "Stable medium",
    "Increasing",
    "Highest decreasing"
  ),
  `4class_quadratic_random_effects_prop_drsc_model_2011_2019` = c(
    "Consistently low",
    "Stable medium",
    "Recovering",
    "Highest"
  )
)

model_names_to_plot <- c(
  "5class_cubic_nre_dgcc_model_2011_2023",
  "4class_quadratic_nre_dgcc_model_2011_2019",
  "4class_cubic_nre_drsc_model_2011_2023",
  "4class_quadratic_random_effects_prop_drsc_model_2011_2019"
)




selected_models <- all_named_models[model_names_to_plot]
plot_list <- list()
all_merged_df <- list()


for (i in seq_along(selected_models)) {
  model_name <- names(selected_models)[i]
  model <- selected_models[[model_name]]
  
  if (!is.null(model) && !is.null(model$call$data) && !is.null(model$pred) && !is.null(model$pprob)) {
    available_vars <- names(model$call$data)
    
    outcome_var <- case_when(
      grepl("drsc", model_name, ignore.case = TRUE) ~ "drsc",
      grepl("dgcc", model_name, ignore.case = TRUE) ~ "dgcc",
      TRUE ~ NA_character_
    )
    
    if (!outcome_var %in% available_vars) {
      cat("⚠️ Variable", outcome_var, "not found in model:", model_name, "\n")
      next
    }
    
    model_data <- model$call$data %>%
      group_by(id) %>%
      mutate(row_id = row_number()) %>%
      ungroup()
    
    pred_df <- model$pred %>%
      group_by(id) %>%
      mutate(row_id = row_number()) %>%
      ungroup()
    
    merged_df <- left_join(model_data, pred_df, by = c("id", "row_id")) %>%
      left_join(model$pprob, by = "id") %>%
      filter(!is.na(class))
 
    
    summary_data <- merged_df %>%
      group_by(year, class) %>%
      dplyr::summarise(
        mean_coverage = mean(.data[[outcome_var]], na.rm = TRUE),
        sd_coverage = sd(.data[[outcome_var]], na.rm = TRUE),
        n_coverage = n(),
        .groups = "drop"
      ) %>%
      mutate(
        se_mean = sd_coverage / sqrt(n_coverage),
        margin_error = 1.96 * se_mean,
        lower_ci = mean_coverage - margin_error,
        upper_ci = mean_coverage + margin_error,
        model = model_name
      )
    
    # Calcular media por clase
    class_order <- merged_df %>%
      group_by(class) %>%
      dplyr::summarise(mean_value = mean(.data[[outcome_var]], na.rm = TRUE), .groups = "drop") %>%
      arrange(mean_value) %>%
      mutate(class_order = row_number())
    
    # Reasignar clases por orden lógico (más baja a más alta)
    merged_df <- merged_df %>%
      left_join(class_order, by = "class") %>%
      mutate(class = class_order) %>%
      select(-class_order)
    
    summary_data <- summary_data %>%
      left_join(class_order, by = "class") %>%
      mutate(class = class_order) %>%
      select(-class_order)
    
    # Ahora construir el label en orden correcto
    class_percentages <- merged_df %>%
      distinct(id, class) %>%
      group_by(class) %>%
      dplyr::summarise(n = n(), .groups = "drop") %>%
      mutate(percentage = n / sum(n))
    
    # Validar que coincida la longitud
    trajectory_vector <- trajectory_labels[[model_name]]
    if (length(trajectory_vector) != nrow(class_percentages)) {
      stop("⚠️ Número de etiquetas no coincide con el número de clases")
    }
    
    # Asignar etiqueta
    class_percentages <- class_percentages %>%
      arrange(class) %>%
      mutate(label = paste0(trajectory_vector, " (", percent(percentage, accuracy = 0.1), ")"))
    
    
    
    
    y_axis_label <- if (grepl("dgcc", model_name, ignore.case = TRUE)) {
      "Proportion of T2DM individuals with HbA1C < 7%"
    } else {
      "Proportion of T2DM individuals with annual DR screening"
    }
    
    plot <- ggplot(merged_df, aes(x = year, colour = as.factor(class))) +
      geom_line(data = summary_data, aes(y = mean_coverage), linewidth = 0.3) +
      geom_point(data = summary_data, aes(y = mean_coverage), size = 0.7) +
      geom_errorbar(data = summary_data, aes(ymin = lower_ci, ymax = upper_ci, color = as.factor(class)), width = 0.25) +
      #scale_x_continuous(breaks = c(1:13), labels = 2011:2023) +
      scale_x_continuous(breaks = seq(1, 13, by = 2), labels = seq(2011, 2023, by =2)) +
      scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2), labels = percent) +
      geom_hline(yintercept = 0.8, linetype = "dashed", color = "red") +
      xlab("Year") +
      ylab(y_axis_label) +
      theme_bw() +
      scale_color_lancet(
        labels = class_percentages$label,
        na.translate = FALSE,
        guide = guide_legend(override.aes = list(
          linetype = "solid",
          shape = 16,
          size = 2
        ))
      ) +
      labs(color = "Latent class") +
      #ggtitle(model_name) +
      guides(color = guide_legend(nrow = 2, byrow = TRUE, title.position = "top", title.hjust = 0)) +
      theme(
        legend.position = c(0.02, 0.98),
        legend.justification = c(0, 1),
        legend.direction = "horizontal",
        legend.box = "horizontal",
        legend.margin = margin(t = 1, b = 1, r = 1, l = 1),
        legend.key.size = unit(0.2, "cm"),
        legend.background = element_rect(fill = "transparent", color = NA),
        legend.text = element_text(size = 7),
        legend.title = element_text(size = 8, face = "bold"),
        axis.text = element_text(size = 6.2),
        axis.title = element_text(size = 7.5, face = "bold"),
        #axis.title.x = element_blank(),
        #axis.title.y = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
      )
    
    merged_df$outcome_var <- outcome_var
    merged_df$model_name <- model_name
    all_merged_df[[model_name]] <- merged_df
    plot_list[[i]] <- plot
  } else {
    cat(paste("⚠️ Warning: Model missing components:", model_name, "\n"))
  }
}




# Titles as text grobs
dgcc_title <- wrap_elements(grid::textGrob(
  "Diabetic glycaemic control coverage", 
  x = 0, hjust = 0, gp = gpar(fontface = "bold", fontsize = 13)
))

drsc_title <- wrap_elements(grid::textGrob(
  "Diabetic retinopathy screening coverage", 
  x = 0, hjust = 0, gp = gpar(fontface = "bold", fontsize = 13)
))

# Combine each title + plot with reduced spacing
dgcc_block <- dgcc_title / plot_dm + plot_layout(heights = c(0.1, 1))
drsc_block <- drsc_title / plot_drs + plot_layout(heights = c(0.1, 1))

# Final combination
combined_trends <- dgcc_block | drsc_block

# Optional overall annotation
combined_trends <- combined_trends +
  plot_annotation(
    theme = theme(
      plot.title = element_text(size = 14, face = "bold"),
      plot.subtitle = element_text(size = 10)
    )
  )

# Display
combined_trends




```

```{r}
#| message: false
#| echo: false
#| warning: false
#| paged-print: false
#| fig-height: 9
#| fig-width: 10
#| fig-align: left
#| fig-cap: "**Figure 2. Latent trajectories of observed mean glycaemic control and diabetic retinopathy screening coverage across Chilean municipalities.** The left column presents plots for glycaemic control (HbA1c < 7%), and the right column for annual DR screening. The plots at the top are based on data from 2011 to 2023, while those below use data restricted to the 2011–2019 period. Each panel displays average annual coverage with 95% confidence intervals, stratified by latent classes identified through longitudinal mixture modeling. The dashed red line indicates the 80% coverage threshold used as a policy benchmark. Municipalities in the lowest quintile of diabetes coverage were excluded from the analysis."

model_titles <- c(
  "5class_cubic_nre_dgcc_model_2011_2023" = "Five-class model in Model D structure for glycaemic control coverage (2011–2023)",
  "4class_quadratic_nre_dgcc_model_2011_2019" = "Four-class model in Model D structure for glycaemic control coverage (2011–2019)",
  "4class_cubic_nre_drsc_model_2011_2023" = "Four-class model in Model D structure for DR screening coverage (2011–2023)",
  "4class_quadratic_random_effects_prop_drsc_model_2011_2019" = "Four-class model with proportional random effects in Model D structure for DR screening coverage (2011–2019)"
)



# Combine plots with titles inline
combined_plot <- (
  dgcc_title / (plot_list[[1]] | plot_list[[2]]) /
    drsc_title / (plot_list[[3]] | plot_list[[4]])
) +
  plot_layout(heights = c(0.1, 1, 0.1, 1)) +
  plot_annotation(
    #title = "Latent trajectory classes of DGCC and DRSC over two study periods",
    #subtitle = "Average annual coverage with 95% confidence intervals",
    theme = theme(plot.title = element_text(size = 14, face = "bold", hjust = 0))
  )

# Print
combined_plot



```

```{r}
#| echo: false
#| message: false
#| warning: false
#| paged-print: false
#| fig-height: 12
#| fig-width: 10


individual_trajectories_plots <- map2(
  all_merged_df[model_names_to_plot],
  model_names_to_plot,
  ~ {
    df <- .x
    model_name <- .y

    outcome_var <- unique(df$outcome_var)
    trajectory_vector <- trajectory_labels[[model_name]]

    class_order <- df %>%
      group_by(class) %>%
      dplyr::summarise(mean_val = mean(.data[[outcome_var]], na.rm = TRUE), .groups = "drop") %>%
      arrange(mean_val) %>%
      mutate(class_order = row_number())

    label_df <- df %>%
      distinct(id, class) %>%
      left_join(class_order, by = "class") %>%
      group_by(class_order) %>%
      dplyr::summarise(n = n(), .groups = "drop") %>%
      mutate(
        percentage = n / sum(n),
        label = paste0(trajectory_vector, " (", percent(percentage, accuracy = 0.1), ")"),
        class = class_order
      ) %>%
      arrange(class)

    df <- df %>%
      left_join(class_order, by = "class") %>%
      mutate(class = class_order) %>%
      left_join(label_df, by = "class") %>%
      mutate(label = factor(label, levels = label_df$label))

    y_axis_label <- if (outcome_var == "dgcc") {
      "Proportion of T2DM individuals with HbA1C < 7%"
    } else {
      "Proportion of T2DM individuals with annual DR screening"
    }

    ggplot(df, aes(x = year, y = .data[[outcome_var]], group = id, color = label)) +
      geom_line(alpha = 0.15, linewidth = 0.3) +
      stat_summary(fun = mean, geom = "line", aes(group = label), linewidth = 0.9) +
      facet_wrap(~ label, nrow = 1, strip.position = "top") +
      scale_color_lancet() +
      scale_y_continuous(limits = c(0, 1), labels = percent) +
      scale_x_continuous(breaks = seq(1, 13, by = 2), labels = seq(2011, 2023, by = 2)) +
      labs(
        title = model_titles[[model_name]],
        x = "Year",
        y = y_axis_label,
        color = "Latent class"
      ) +
      theme_minimal(base_size = 10) +
      theme(
        strip.text = element_text(size = 8, face = "bold"),
        strip.placement = "outside",
        plot.title = element_text(size = 10, face = "bold", hjust = 0),
        axis.text = element_text(size = 7),
        axis.title = element_text(size = 8.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        legend.position = "none"
      )
  }
)

individual_trajectories_panel <- wrap_plots(individual_trajectories_plots, ncol = 1) +
  plot_annotation(
    title = "Raw individual trajectories by latent class (ordered within model)",
    subtitle = "Each facet uses model-specific class ordering and consistent color palette",
    theme = theme(
      plot.title = element_text(size = 13, face = "bold", hjust = 0),
      plot.subtitle = element_text(size = 10, hjust = 0)
    )
  )

# Mostrar
individual_trajectories_panel



```
